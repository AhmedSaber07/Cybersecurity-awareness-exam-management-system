@model IEnumerable<ExamManagementApp.Models.Question>

@{
    Layout = "_DashboardLayout";
    ViewData["Title"] = "Index";
}
<head>
    <link rel="stylesheet" href="~/css/style.css"/>
</head>
    <table class="table table-striped">
        <thead>
            <tr>
                <th>#</th>
                <th>
                    @Html.DisplayNameFor(model => model.Text)
                </th>
                <th>

                </th>
                <th>
                    @Html.DisplayNameFor(model => model.choiceA)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.choiceB)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.choiceC)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Answer)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Point)
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.Select((value, i) => new { i, value }))
            {
                <tr class="ContainQuestion">
                    <td class="fw-bold">
                        @((int)item.i+1)
                    </td>
                    <td colspan="2">
                        @Html.DisplayTextFor(modelItem => item.value.Text)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.value.choiceA)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.value.choiceB)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.value.choiceC)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.value.Answer)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.value.Point)
                    </td>
                    <td>
                        <a asp-action="Edit" asp-route-id="@item.value.Id" class="btn btn-primary"><i class="bi bi-pencil-square"></i></a> |
                        @*<a asp-action="Details" asp-route-id="@item.Id">Details</a> |*@
                        <a href="javascript:;" class="btn btn-outline-danger js-delete" data-id="@item.value.Id"><i class="bi bi-trash"></i></a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
    @*<div class="d-flex fixed-bottom justify-content-end">
        <a class="btn btn-success" asp-action="Create"><i class="bi bi-plus-circle"></i> Add</a>
    </div>*@
    @section Scripts {
        <script>
            $(document).ready(function () {
                $('.js-delete').on('click', function () {
                    var btn = $(this);
                    var QuestionContainer = btn.closest('.ContainQuestion');
                    Swal.fire({
                        title: 'Are you sure?',
                        text: "You won't be able to revert this!",
                        icon: 'warning',
                        showCancelButton: true,
                        confirmButtonColor: '#3085d6',
                        cancelButtonColor: '#d33',
                        confirmButtonText: 'Yes, delete it!'
                    }).then((result) => {
                        if (result.isConfirmed) {
                            $.ajax({
                                url: '/Api/AdminApi/DeleteQuestion/?questionId=' + btn.data('id'),
                                method: 'DELETE',
                                success: function () {
                                    Swal.fire({
                                        position: 'center',
                                        icon: 'success',
                                        title: 'Question is deleted',
                                        showConfirmButton: false,
                                        timer: 1000
                                    })
                                    QuestionContainer.fadeOut(1300, function () {
                                        QuestionContainer.remove();
                                    });
                                },
                                error: function () {
                                    Swal.fire({
                                        icon: 'error',
                                        title: 'Oops...',
                                        text: 'Something went wrong!'
                                    });
                                }
                            });
                        }
                    });
                });

            });
        </script>
    }
